{
  "openapi": "3.0.0",
  "info": {
    "title": "Isi Perut API Documentation",
    "version": "1.0.0",
    "description": "Swagger API documentation for Isi Perut application."
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "Base URL for the API"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Authenticate user and provide access token",
        "description": "User login with email and password to obtain a JWT token.",
        "tags": ["Auths"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "admin@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Login success",
                  "isSuccess": true,
                  "data": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "user": {
                      "id": 1,
                      "name": "Admin",
                      "email": "admin@example.com",
                      "role": "admin",
                      "photoProfile": "https://example.com/profile.jpg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing email or password",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Email and password is required",
                  "isSuccess": false,
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFound": {
                    "summary": "User not found",
                    "value": {
                      "status": "Failed",
                      "message": "User not found",
                      "isSuccess": false,
                      "data": null
                    }
                  },
                  "IncorrectPassword": {
                    "summary": "Incorrect password",
                    "value": {
                      "status": "Failed",
                      "message": "Password is incorrect",
                      "isSuccess": false,
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user with name, email, password, address, and phone.",
        "tags": ["Auths"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Rafif"
                  },
                  "email": {
                    "type": "string",
                    "example": "rafif@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "address": {
                    "type": "string",
                    "example": "Batam"
                  },
                  "phone": {
                    "type": "string",
                    "example": "08214365879"
                  }
                },
                "required": ["name", "email", "password", "address", "phone"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "User created successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 3,
                    "name": "Rafif",
                    "email": "rafif@example.com",
                    "address": "Batam",
                    "phone": "08214365879",
                    "role": "user",
                    "createdAt": "2024-11-17T13:56:40.183Z",
                    "updatedAt": "2024-11-17T13:56:40.183Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "All fields are required",
                  "isSuccess": false,
                  "data": null
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "summary": "Get current logged-in user",
        "description": "Retrieve details of the currently logged-in user. Requires authorization.",
        "tags": ["Auths"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successfully retrieved current user",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get user",
                  "isSuccess": true,
                  "data": {
                    "id": 1,
                    "name": "Admin",
                    "email": "admin@example.com",
                    "address": "Jakarta",
                    "phone": "08123456789",
                    "role": "admin",
                    "photoProfile": "https://example.com/profile.jpg",
                    "createdAt": "2024-11-16T23:46:14.547Z",
                    "updatedAt": "2024-11-16T23:46:14.549Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token missing or invalid",
            "content": {
              "application/json": {
                "examples": {
                  "MissingToken": {
                    "summary": "Token missing",
                    "value": {
                      "status": "Failed",
                      "message": "Your token is missing!",
                      "isSuccess": false
                    }
                  },
                  "NotAuthorized": {
                    "summary": "Not authorized as admin",
                    "value": {
                      "status": "Failed",
                      "message": "Not Authorized as an Admin",
                      "isSuccess": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users.",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get all users",
                  "isSuccess": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Admin",
                      "email": "admin@example.com",
                      "address": "Jakarta",
                      "phone": "08123456789",
                      "role": "admin",
                      "createdAt": "2024-11-16T23:46:14.547Z",
                      "updatedAt": "2024-11-16T23:46:14.549Z"
                    },
                    {
                      "id": 2,
                      "name": "Rafif",
                      "email": "rafif@example.com",
                      "address": "Batam",
                      "phone": "08214365879",
                      "role": "user",
                      "createdAt": "2024-11-17T13:56:40.183Z",
                      "updatedAt": "2024-11-17T13:56:40.183Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user.",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Ahmed"
                  },
                  "email": {
                    "type": "string",
                    "example": "ahmed@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "address": {
                    "type": "string",
                    "example": "California"
                  },
                  "phone": {
                    "type": "string",
                    "example": "081234567890"
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  },
                  "photoProfile": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "address",
                  "phone",
                  "role",
                  "photoProfile"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "User created successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 3,
                    "name": "Ahmed",
                    "email": "ahmed@example.com",
                    "address": "California",
                    "phone": "081234567890",
                    "role": "user",
                    "photoProfile": "https://example.com/profile.jpg",
                    "createdAt": "2024-11-17T13:56:40.183Z",
                    "updatedAt": "2024-11-17T13:56:40.183Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "All fields are required",
                  "isSuccess": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve details of a specific user by their ID.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user details",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get user",
                  "isSuccess": true,
                  "data": {
                    "id": 1,
                    "name": "Admin",
                    "email": "admin@example.com",
                    "address": "Jakarta",
                    "phone": "08123456789",
                    "role": "admin",
                    "createdAt": "2024-11-16T23:46:14.547Z",
                    "updatedAt": "2024-11-16T23:46:14.549Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "User not found",
                  "isSuccess": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update user by ID",
        "description": "Update a user's information by their ID.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated User"
                  },
                  "email": {
                    "type": "string",
                    "example": "updateduser@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "newpassword123"
                  },
                  "address": {
                    "type": "string",
                    "example": "Yogyakarta"
                  },
                  "phone": {
                    "type": "string",
                    "example": "081234567890"
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "User updated successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 1,
                    "name": "Updated User",
                    "email": "updateduser@example.com",
                    "address": "Yogyakarta",
                    "phone": "081234567890",
                    "role": "user",
                    "createdAt": "2024-11-16T23:46:14.547Z",
                    "updatedAt": "2024-11-18T12:00:00.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields or invalid data",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Invalid input data",
                  "isSuccess": false,
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "User not found",
                  "isSuccess": false,
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "description": "Delete a specific user by their ID.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "User deleted successfully",
                  "isSuccess": true
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "User not found",
                  "isSuccess": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/products/all": {
      "get": {
        "summary": "Get all products",
        "description": "Retrieve a list of all products, including deleted ones.",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "Successfully retrieved all products",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get products",
                  "isSuccess": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Spaghetti Carbonara",
                      "desc": "Creamy Italian pasta with a rich sauce.",
                      "price": "12.99",
                      "stock": 50,
                      "category": "food",
                      "image": "https://example.com/image.jpg",
                      "createdAt": "2024-11-16T23:46:14.787Z",
                      "updatedAt": "2024-11-16T23:46:14.787Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all active products",
        "description": "Retrieve a list of all active products (non-deleted).",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "Successfully retrieved all active products",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get products",
                  "isSuccess": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Spaghetti Carbonara",
                      "desc": "Creamy Italian pasta with a rich sauce.",
                      "price": "12.99",
                      "stock": 50,
                      "category": "food",
                      "image": "https://example.com/image.jpg",
                      "createdAt": "2024-11-16T23:46:14.787Z",
                      "updatedAt": "2024-11-16T23:46:14.787Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Create a new product.",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Beef Cheese Burger"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Juicy beef patty topped with melted cheese in a soft bun."
                  },
                  "price": {
                    "type": "number",
                    "example": 5.99
                  },
                  "stock": {
                    "type": "integer",
                    "example": 100
                  },
                  "category": {
                    "type": "string",
                    "example": "food"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "desc",
                  "price",
                  "stock",
                  "category",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Product created successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 13,
                    "name": "Beef Cheese Burger",
                    "desc": "Juicy beef patty topped with melted cheese in a soft bun.",
                    "price": 5.99,
                    "stock": 100,
                    "category": "food",
                    "image": "https://example.com/image.jpg",
                    "createdAt": "2024-11-17T16:18:18.420Z",
                    "updatedAt": "2024-11-17T16:18:18.420Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Please provide name, description, price, stock, and category",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "description": "Retrieve details of a product by its ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved product details",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get product",
                  "isSuccess": true,
                  "data": {
                    "id": 2,
                    "name": "Margarita Pizza",
                    "desc": "Classic Neapolitan pizza topped with fresh tomatoes, mozzarella, and basil.",
                    "price": 9.99,
                    "stock": 30,
                    "category": "food",
                    "image": "https://example.com/image.jpg",
                    "createdAt": "2024-11-16T23:46:14.787Z",
                    "updatedAt": "2024-11-16T23:46:14.787Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Product not found",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update product by ID",
        "description": "Update a product's information by their ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Product Name"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "price": {
                    "type": "number",
                    "example": 10.99
                  },
                  "stock": {
                    "type": "integer",
                    "example": 20
                  },
                  "category": {
                    "type": "string",
                    "example": "food"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Product updated successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 2,
                    "name": "Updated Product Name",
                    "desc": "Updated description",
                    "price": 10.99,
                    "stock": 20,
                    "category": "food",
                    "updatedAt": "2024-11-17T18:00:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Product not found",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete product by ID",
        "description": "Delete a product by its ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Product deleted successfully",
                  "isSuccess": true
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Product not found",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/carts/admin/all": {
      "get": {
        "summary": "Get all carts (Admin)",
        "description": "Retrieve a list of all carts. Requires authorization.",
        "tags": ["Carts"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successfully retrieved all carts",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get all carts",
                  "isSuccess": true,
                  "data": [
                    {
                      "id": 1,
                      "amount": "3",
                      "total": "29.97",
                      "userId": 1,
                      "productId": 2,
                      "createdAt": "2024-11-17T16:43:29.358Z",
                      "updatedAt": "2024-11-17T16:43:29.358Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "summary": "Get cart by user",
        "description": "Retrieve a list of carts for the currently logged-in user. Requires authorization.",
        "tags": ["Carts"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successfully retrieved carts",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Success to get user carts",
                  "isSuccess": true,
                  "data": [
                    {
                      "id": 1,
                      "amount": "3",
                      "total": "29.97",
                      "userId": 1,
                      "productId": 2,
                      "createdAt": "2024-11-17T16:43:29.358Z",
                      "updatedAt": "2024-11-17T16:43:29.358Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new cart",
        "description": "Create a new cart for the logged-in user.",
        "tags": ["Carts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string",
                    "example": "3"
                  },
                  "total": {
                    "type": "string",
                    "example": "29.97"
                  },
                  "productId": {
                    "type": "integer",
                    "example": 2
                  }
                },
                "required": ["amount", "total", "productId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Cart created successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 1,
                    "amount": "3",
                    "total": "29.97",
                    "userId": 1,
                    "productId": 2,
                    "createdAt": "2024-11-17T16:43:29.358Z",
                    "updatedAt": "2024-11-17T16:43:29.358Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "All fields are required",
                  "isSuccess": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Not Authorized, no token",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    },
    "/carts/{id}": {
      "patch": {
        "summary": "Update cart by ID",
        "description": "Update a specific cart's information by their ID.",
        "tags": ["Carts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the cart to update",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string",
                    "example": "6"
                  }
                },
                "required": ["amount"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Cart updated successfully",
                  "isSuccess": true,
                  "data": {
                    "id": 2,
                    "amount": "6",
                    "total": "59.94",
                    "userId": 1,
                    "productId": 2,
                    "updatedAt": "2024-11-17T17:06:51.575Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Cart not found",
                  "isSuccess": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete cart by ID",
        "description": "Delete a specific cart by its ID.",
        "tags": ["Carts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the cart to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Cart deleted successfully",
                  "isSuccess": true
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failed",
                  "message": "Cart not found",
                  "isSuccess": false
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
